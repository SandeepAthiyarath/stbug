.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.32
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Template::Plugin::GD::Graph::pie3d 3"
.TH Template::Plugin::GD::Graph::pie3d 3 "2006-02-03" "perl v5.8.8" "User Contributed Perl Documentation"
.SH "NAME"
Template::Plugin::GD::Graph::pie3d \- Create 3D pie charts with legends
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&    [% USE g = GD.Graph.pie3d(x_size, y_size); %]
.Ve
.SH "EXAMPLES"
.IX Header "EXAMPLES"
.Vb 5
\&    [% FILTER null;
\&        data = [
\&            ["1st","2nd","3rd","4th","5th","6th"],
\&            [    4,    2,    3,    4,    3,  3.5]
\&        ];
.Ve
.PP
.Vb 1
\&        USE my_graph = GD.Graph.pie3d( 250, 200 );
.Ve
.PP
.Vb 5
\&        my_graph.set(
\&                title => 'A Pie Chart',
\&                label => 'Label',
\&                axislabelclr => 'black',
\&                pie_height => 36,
.Ve
.PP
.Vb 5
\&                transparent => 0,
\&        );
\&        my_graph.plot(data).png | stdout(1);
\&       END;
\&    -%]
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The \s-1GD\s0.Graph.pie3d plugin provides an interface to the GD::Graph::pie3d
class defined by the GD::Graph module. It allows an (x,y) data set to
be plotted as a 3d pie chart.  The x values are typically strings.
.PP
Note that GD::Graph::pie already produces a 3d effect, so GD::Graph::pie3d
is just a wrapper around GD::Graph::pie.  Similarly, the plugin
\&\s-1GD\s0.Graph.pie3d is effectively the same as the plugin \s-1GD\s0.Graph.pie.
.PP
See GD::Graph3d for more details.
.SH "AUTHOR"
.IX Header "AUTHOR"
Thomas Boutell wrote the \s-1GD\s0 graphics library.
.PP
Lincoln D. Stein wrote the Perl \s-1GD\s0 modules that interface to it.
.PP
Martien Verbruggen wrote the GD::Graph module.
.PP
Craig Barratt <craig@arraycomm.com> wrote the original \s-1GD\s0
plugins for the Template Toolkit (2001).
.PP
Andy Wardley <abw@cpan.org> extracted them from the \s-1TT\s0 core
into a separate distribution for \s-1TT\s0 version 2.15.
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (C) 2001 Craig Barratt <craig@arraycomm.com>, 
2006 Andy Wardley <abw@cpan.org>.
.PP
GD::Graph3d is copyright (c) 1999,2000 Wadsack\-Allen. All Rights
Reserved. GD::Graph is copyright 1999 Martien Verbruggen.
.PP
This module is free software; you can redistribute it and/or
modify it under the same terms as Perl itself.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Template::Plugin::GD, Template::Plugin::GD::Graph::lines, Template::Plugin::GD::Graph::lines3d, Template::Plugin::GD::Graph::bars, Template::Plugin::GD::Graph::bars3d, Template::Plugin::GD::Graph::points, Template::Plugin::GD::Graph::linespoints, Template::Plugin::GD::Graph::area, Template::Plugin::GD::Graph::mixed, Template::Plugin::GD::Graph::pie, \s-1GD\s0
.PP
# Local Variables:
# mode: perl
# perl\-indent\-level: 4
# indent\-tabs\-mode: nil
# End:
#
# vim: expandtab shiftwidth=4:
