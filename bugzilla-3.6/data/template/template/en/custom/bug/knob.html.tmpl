use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.22
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1274253581',
        'name' => 'bug/knob.html.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  "\n";
#line 24 "template/en/custom/bug/knob.html.tmpl"
    $output .=  $context->process('global/variables.none.tmpl');
    $output .=  "\n<div id=\"status\">";
#line 26 "template/en/custom/bug/knob.html.tmpl"
    $output .=  $context->process('bug/field.html.tmpl', { 'no_tds' => 1, 'field' => $stash->get(['bug_fields', 0, 'bug_status', 0]), 'value' => $stash->get(['bug', 0, 'bug_status', 0]), 'override_legal_values' => $stash->get(['bug', 0, 'choices', 0, 'bug_status', 0]), 'editable' => $stash->get(['bug', 0, 'choices', 0, 'bug_status', 0, 'size', 0]) > 1 });
    $output .=  "\n";
#line 38 "template/en/custom/bug/knob.html.tmpl"
    if ($stash->get(['bug', 0, 'resolution', 0]) || $stash->get(['bug', 0, 'check_can_change_field', [ 'resolution', $stash->get(['bug', 0, 'resolution', 0]), 1 ]])) {
    $output .=  "\n    <noscript><br>resolved&nbsp;as&nbsp;</noscript>";
    }
    
    $output .=  "\n\n  <span id=\"resolution_settings\">";
#line 41 "template/en/custom/bug/knob.html.tmpl"
    $output .=  $context->process('bug/field.html.tmpl', { 'no_tds' => 1, 'field' => $stash->get(['bug_fields', 0, 'resolution', 0]), 'value' => $stash->get(['bug', 0, 'resolution', 0]), 'override_legal_values' => $stash->get(['bug', 0, 'choices', 0, 'resolution', 0]), 'editable' => $stash->get(['bug', 0, 'check_can_change_field', [ 'resolution', $stash->get(['bug', 0, 'resolution', 0]), 1 ]]) });
    $output .=  "\n  </span>\n";
#line 70 "template/en/custom/bug/knob.html.tmpl"
    if ($stash->get(['bug', 0, 'check_can_change_field', [ 'dup_id', 0, 1 ]])) {
    $output .=  "\n    <noscript><br> duplicate</noscript>\n    <span id=\"duplicate_settings\">of\n      <span id=\"dup_id_container\" class=\"bz_default_hidden\">";
#line 1 "template/en/custom/bug/knob.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('none')
                  || $context->throw($context->error);
    
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('bug_link', [ $stash->get(['bug', 0, 'dup_id', 0]) ])
                  || $context->throw($context->error);
    
    $output .=  ($stash->get(['terms', 0, 'bug', 0]) . " " . $stash->get(['bug', 0, 'dup_id', 0]));
        
        &$_tt_filter($output);
    };
    
        
        &$_tt_filter($output);
    };
    
    $output .=  "\n        (<a href=\"#\" id=\"dup_id_edit_action\">edit</a>)\n      </span\n      ><input id=\"dup_id\" name=\"dup_id\" size=\"6\"\n              value=\"";
#line 58 "template/en/custom/bug/knob.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['bug', 0, 'dup_id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">\n    </span>";
#line 62 "template/en/custom/bug/knob.html.tmpl"
    if ($stash->get(['bug', 0, 'dup_id', 0])) {
    $output .=  "\n        <noscript>";
#line 61 "template/en/custom/bug/knob.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('none')
                  || $context->throw($context->error);
    
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('bug_link', [ $stash->get(['bug', 0, 'dup_id', 0]) ])
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['bug', 0, 'dup_id', 0]);
        
        &$_tt_filter($output);
    };
    
        
        &$_tt_filter($output);
    };
    
    $output .=  "</noscript>";
    }
    
    $output .=  "\n    <div id=\"dup_id_discoverable\" class=\"bz_default_hidden\">\n      <a href=\"#\" id=\"dup_id_discoverable_action\">Mark as Duplicate</a>\n    </div>";
    }
    elsif ($stash->get(['bug', 0, 'dup_id', 0])) {
    $output .=  "\n    <noscript><br> duplicate</noscript>\n    <span id=\"duplicate_display\">of ";
#line 1 "template/en/custom/bug/knob.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('none')
                  || $context->throw($context->error);
    
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('bug_link', [ $stash->get(['bug', 0, 'dup_id', 0]) ])
                  || $context->throw($context->error);
    
    $output .=  ($stash->get(['terms', 0, 'bug', 0]) . " " . $stash->get(['bug', 0, 'dup_id', 0]));
        
        &$_tt_filter($output);
    };
    
        
        &$_tt_filter($output);
    };
    
    $output .=  "</span>";
    }
    
    $output .=  "\n</div>\n\n<script type=\"text/javascript\">\n  var close_status_array = [";
#line 78 "template/en/custom/bug/knob.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['bug', 0, 'choices', 0, 'bug_status', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'status'} = $_tt_value;
#line 76 "template/en/custom/bug/knob.html.tmpl"
    if ($stash->get(['status', 0, 'is_open', 0])) {
    ($_tt_value, $_tt_error) = $_tt_list->get_next();
    next FOR1;
    
    }
    
    $output .=  "\n      '";
#line 77 "template/en/custom/bug/knob.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('js')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['status', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "'";
#line 77 "template/en/custom/bug/knob.html.tmpl"
    if (!($stash->get(['loop', 0, 'last', 0]))) {
    $output .=  ',';
    }
    ;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n  ];\n  YAHOO.util.Dom.removeClass('dup_id_discoverable', 'bz_default_hidden');\n  hideEditableField( \"dup_id_container\", \"dup_id\", 'dup_id_edit_action',\n                     'dup_id', '";
#line 82 "template/en/custom/bug/knob.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('js')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['bug', 0, 'dup_id', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "' )\n  showHideStatusItems( \"\",  ['";
#line 83 "template/en/custom/bug/knob.html.tmpl"
    if ($stash->get(['bug', 0, 'dup_id', 0])) {
    $output .=  'is_duplicate';
    }
    
    $output .=  "',\n                             '";
#line 84 "template/en/custom/bug/knob.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('js')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['bug', 0, 'bug_status', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "']);\n  YAHOO.util.Event.addListener( 'bug_status', \"change\", showHideStatusItems,\n                                ['";
#line 86 "template/en/custom/bug/knob.html.tmpl"
    if ($stash->get(['bug', 0, 'dup_id', 0])) {
    $output .=  'is_duplicate';
    }
    
    $output .=  "',\n                                 '";
#line 87 "template/en/custom/bug/knob.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('js')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['bug', 0, 'bug_status', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "']);\n  YAHOO.util.Event.addListener( 'resolution', \"change\", showDuplicateItem);\n  YAHOO.util.Event.addListener( 'dup_id_discoverable_action',\n                                'click',\n                                setResolutionToDuplicate,\n                                '";
#line 92 "template/en/custom/bug/knob.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('js')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['Param', [ 'duplicate_or_move_bug_status' ]]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "');\n  YAHOO.util.Event.addListener( window, 'load',  showHideStatusItems,\n                              ['";
#line 95 "template/en/custom/bug/knob.html.tmpl"
    if ($stash->get(['bug', 0, 'dup_id', 0])) {
    $output .=  'is_duplicate';
    }
    
    $output .=  "',\n                               '";
#line 96 "template/en/custom/bug/knob.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('js')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['bug', 0, 'bug_status', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "'] );\n";
#line 98 "template/en/custom/bug/knob.html.tmpl"
    $output .=  $context->include('bug/field-events.js.tmpl', { 'field' => $stash->get(['select_fields', 0, 'bug_status', 0]) });
#line 99 "template/en/custom/bug/knob.html.tmpl"
    $output .=  $context->include('bug/field-events.js.tmpl', { 'field' => $stash->get(['select_fields', 0, 'resolution', 0]) });
    $output .=  "\n</script>\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
