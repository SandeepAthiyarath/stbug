use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.22
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1274253581',
        'name' => 'admin/params/core.html.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  "\n";
#line 1 "template/en/custom/admin/params/core.html.tmpl"
    $stash->set('title', 'Required Settings');
    $stash->set('desc', ("Settings that are required for proper operation of " . $stash->get(['terms', 0, 'Bugzilla', 0])));
    $output .=  "\n";
#line 1 "template/en/custom/admin/params/core.html.tmpl"
    $stash->set('param_descs', { 'urlbase' => ("The URL that is the common initial leading part of all " . $stash->get(['terms', 0, 'Bugzilla', 0]) . " ")  . 'URLs.', 'sslbase' => 'The URL that is the common initial leading part of all HTTPS '  . ("(SSL) " . $stash->get(['terms', 0, 'Bugzilla', 0]) . " URLs."), 'ssl_redirect' => ("When this is enabled, " . $stash->get(['terms', 0, 'Bugzilla', 0]) . " will ensure that every page is")  . ' accessed over SSL, by redirecting any plain HTTP requests to HTTPS'  . ' using the <tt>sslbase</tt> parameter. Also, when this is enabled,'  . (" " . $stash->get(['terms', 0, 'Bugzilla', 0]) . " will send out links using <tt>sslbase</tt> in emails")  . ' instead of <tt>urlbase</tt>.', 'cookiepath' => 'Path, relative to your web document root, to which to restrict '  . ($stash->get(['terms', 0, 'Bugzilla', 0]) . " cookies. Normally this is the URI portion of your URL ")  . 'base. Begin with a / (single slash mark). For instance, if '  . ($stash->get(['terms', 0, 'Bugzilla', 0]) . " serves from 'http://www.somedomain.com/bugzilla/', set ")  . 'this parameter to /bugzilla/. Setting it to / will allow '  . 'all sites served by this web server or virtual host to read '  . ($stash->get(['terms', 0, 'Bugzilla', 0]) . " cookies.")  });
    $output .=  "\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
