use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.22
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1260737187',
        'name' => 'email/lockout.txt.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  "\n";
#line 21 "template/en/default/email/lockout.txt.tmpl"
    $output .=  $context->process('global/variables.none.tmpl');
    $output .=  "\n\nFrom: ";
#line 23 "template/en/default/email/lockout.txt.tmpl"
    $output .=  $stash->get(['Param', [ 'mailfrom' ]]);
    $output .=  "\nTo: ";
#line 24 "template/en/default/email/lockout.txt.tmpl"
    $output .=  $stash->get(['Param', [ 'maintainer' ]]);
    $output .=  "\nSubject: [";
#line 25 "template/en/default/email/lockout.txt.tmpl"
    $output .=  $stash->get(['terms', 0, 'Bugzilla', 0]);
    $output .=  "] Account Lock-Out: ";
#line 25 "template/en/default/email/lockout.txt.tmpl"
    $output .=  $stash->get(['locked_user', 0, 'login', 0]);
    $output .=  " (";
#line 25 "template/en/default/email/lockout.txt.tmpl"
    $output .=  $stash->get(['attempts', 0, 0, 0, 'ip_addr', 0]);
    $output .=  ")\nX-Bugzilla-Type: admin\n\nThe IP address ";
#line 28 "template/en/default/email/lockout.txt.tmpl"
    $output .=  $stash->get(['attempts', 0, 0, 0, 'ip_addr', 0]);
    $output .=  " failed too many login attempts (";
#line 29 "template/en/default/email/lockout.txt.tmpl"
    $output .=  '5';
    $output .=  ") for\nthe account ";
#line 30 "template/en/default/email/lockout.txt.tmpl"
    $output .=  $stash->get(['locked_user', 0, 'login', 0]);
    $output .=  ". \n\nThe login attempts occurred at these times:\n";
#line 36 "template/en/default/email/lockout.txt.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('attempts');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'login'} = $_tt_value;
    $output .=  "\n  ";
#line 35 "template/en/default/email/lockout.txt.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('time')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['login', 0, 'login_time', 0]);
        
        &$_tt_filter($output);
    };
    ;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n\nThis IP will be able to log in again using this account at\n";
#line 39 "template/en/default/email/lockout.txt.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('time')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('unlock_at');
        
        &$_tt_filter($output);
    };
    
    $output .=  ".\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
