use utf8;

#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.22
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1269865972',
        'name' => 'flag/list.html.tmpl',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
    $output .=  "\n";
#line 157 "template/en/default/flag/list.html.tmpl"
    if ($stash->get(['user', 0, 'id', 0]) && ! $stash->get('read_only_flags')) {
    $output .=  "\n\n";
    $output .=  "\n";
#line 31 "template/en/default/flag/list.html.tmpl"
    $stash->set('flag_table_id', 'flags', 1);
    $output .=  "\n\n<script type=\"text/javascript\" src=\"js/flag.js\"></script>\n\n<table id=\"";
#line 35 "template/en/default/flag/list.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('flag_table_id');
        
        &$_tt_filter($output);
    };
    
    $output .=  "\">";
#line 47 "template/en/default/flag/list.html.tmpl"
    if (!($stash->get('flag_no_header'))) {
    $output .=  "\n    <tr>\n      <th colspan=\"3\">\n        Flags:\n      </th>";
#line 45 "template/en/default/flag/list.html.tmpl"
    if ($stash->get('any_flags_requesteeble')) {
    $output .=  "\n        <th>\n          Requestee:\n        </th>";
    }
    
    $output .=  "\n    </tr>";
    }
    
    $output .=  "\n\n  ";
#line 127 "template/en/default/flag/list.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('flag_types');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'type'} = $_tt_value;
    $output .=  "\n    \n    ";
#line 120 "template/en/default/flag/list.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['type', 0, 'flags', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR2:   while (! $_tt_error) {
                $stash->{'flag'} = $_tt_value;
    $output .=  "\n      <tr>\n        <td>";
#line 56 "template/en/default/flag/list.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['flag', 0, 'setter', 0, 'nick', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  ":\n        </td>\n        <td>\n          <label title=\"";
#line 59 "template/en/default/flag/list.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['type', 0, 'description', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\"\n                 for=\"flag-";
#line 60 "template/en/default/flag/list.html.tmpl"
    $output .=  $stash->get(['flag', 0, 'id', 0]);
    $output .=  "\">";
#line 61 "template/en/default/flag/list.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('no_break')
                  || $context->throw($context->error);
    
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['type', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
        
        &$_tt_filter($output);
    };
    
    $output .=  "</label>\n        </td>\n        <td>\n          <select id=\"flag-";
#line 64 "template/en/default/flag/list.html.tmpl"
    $output .=  $stash->get(['flag', 0, 'id', 0]);
    $output .=  "\" name=\"flag-";
#line 64 "template/en/default/flag/list.html.tmpl"
    $output .=  $stash->get(['flag', 0, 'id', 0]);
    $output .=  "\" \n                  title=\"";
#line 65 "template/en/default/flag/list.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['type', 0, 'description', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\"\n                  onchange=\"toggleRequesteeField(this);\"\n                  class=\"flag_select flag_type-";
#line 67 "template/en/default/flag/list.html.tmpl"
    $output .=  $stash->get(['type', 0, 'id', 0]);
    $output .=  "\">\n            ";
#line 71 "template/en/default/flag/list.html.tmpl"
    if ($stash->get(['user', 0, 'can_request_flag', [ $stash->get('type') ]]) || $stash->get(['flag', 0, 'setter_id', 0]) eq $stash->get(['user', 0, 'id', 0])) {
    $output .=  "\n              <option value=\"X\"></option>";
    }
    
#line 84 "template/en/default/flag/list.html.tmpl"
    if ($stash->get(['type', 0, 'is_active', 0])) {
#line 75 "template/en/default/flag/list.html.tmpl"
    if (($stash->get(['type', 0, 'is_requestable', 0]) && $stash->get(['user', 0, 'can_request_flag', [ $stash->get('type') ]])) || $stash->get(['flag', 0, 'status', 0]) eq '?') {
    $output .=  "\n                <option value=\"?\" ";
#line 74 "template/en/default/flag/list.html.tmpl"
    if ($stash->get(['flag', 0, 'status', 0]) eq '?') {
    $output .=  'selected';
    }
    
    $output .=  ">?</option>";
    }
    
#line 78 "template/en/default/flag/list.html.tmpl"
    if ($stash->get(['user', 0, 'can_set_flag', [ $stash->get('type') ]]) || $stash->get(['flag', 0, 'status', 0]) eq '+') {
    $output .=  "\n                <option value=\"+\" ";
#line 77 "template/en/default/flag/list.html.tmpl"
    if ($stash->get(['flag', 0, 'status', 0]) eq '+') {
    $output .=  'selected';
    }
    
    $output .=  ">+</option>";
    }
    
#line 81 "template/en/default/flag/list.html.tmpl"
    if ($stash->get(['user', 0, 'can_set_flag', [ $stash->get('type') ]]) || $stash->get(['flag', 0, 'status', 0]) eq '-') {
    $output .=  "\n                <option value=\"-\" ";
#line 80 "template/en/default/flag/list.html.tmpl"
    if ($stash->get(['flag', 0, 'status', 0]) eq '-') {
    $output .=  'selected';
    }
    
    $output .=  ">-</option>";
    }
    
    }
    else {
    $output .=  "\n              <option value=\"";
#line 83 "template/en/default/flag/list.html.tmpl"
    $output .=  $stash->get(['flag', 0, 'status', 0]);
    $output .=  "\" selected=\"selected\">";
#line 83 "template/en/default/flag/list.html.tmpl"
    $output .=  $stash->get(['flag', 0, 'status', 0]);
    $output .=  "</option>";
    }
    
    $output .=  "\n          </select>\n        </td>";
#line 118 "template/en/default/flag/list.html.tmpl"
    if ($stash->get('any_flags_requesteeble')) {
    $output .=  "\n          <td>";
#line 116 "template/en/default/flag/list.html.tmpl"
    if (($stash->get(['type', 0, 'is_active', 0]) && $stash->get(['type', 0, 'is_requestable', 0]) && $stash->get(['type', 0, 'is_requesteeble', 0])) || $stash->get(['flag', 0, 'requestee', 0])) {
    $output .=  "\n              <span style=\"white-space: nowrap;\">";
#line 114 "template/en/default/flag/list.html.tmpl"
    if ($stash->get(['Param', [ 'usemenuforusers' ]])) {
#line 92 "template/en/default/flag/list.html.tmpl"
    $stash->set('flag_custom_list', $stash->get(['flag', 0, 'type', 0, 'grant_list', 0]));
#line 98 "template/en/default/flag/list.html.tmpl"
    if (! ($stash->get(['type', 0, 'is_active', 0]) && $stash->get(['type', 0, 'is_requestable', 0]) && $stash->get(['type', 0, 'is_requesteeble', 0]))) {
    $output .=  "\n                    ";
#line 97 "template/en/default/flag/list.html.tmpl"
    $stash->set('flag_custom_list', [ $stash->get(['flag', 0, 'requestee', 0]) ]);
    }
    
#line 1 "template/en/default/flag/list.html.tmpl"
    $output .=  $context->include('global/userselect.html.tmpl', { 'name' => ("requestee-" . $stash->get(['flag', 0, 'id', 0])), 'id' => ("requestee-" . $stash->get(['flag', 0, 'id', 0])), 'value' => $stash->get(['flag', 0, 'requestee', 0, 'login', 0]), 'multiple' => 0, 'emptyok' => 1, 'custom_userlist' => $stash->get('flag_custom_list') });
    }
    else {
    $output .=  "\n                  (<input type=\"text\" class=\"requestee\" maxlength=\"255\"\n                          id=\"requestee-";
#line 109 "template/en/default/flag/list.html.tmpl"
    $output .=  $stash->get(['flag', 0, 'id', 0]);
    $output .=  "\"\n                          name=\"requestee-";
#line 110 "template/en/default/flag/list.html.tmpl"
    $output .=  $stash->get(['flag', 0, 'id', 0]);
    $output .=  "\"";
#line 113 "template/en/default/flag/list.html.tmpl"
    if ($stash->get(['flag', 0, 'status', 0]) eq '?' && $stash->get(['flag', 0, 'requestee', 0])) {
    $output .=  "\n                            value=\"";
#line 112 "template/en/default/flag/list.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['flag', 0, 'requestee', 0, 'login', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\"";
    }
    
    $output .=  ">)";
    }
    
    $output .=  "\n              </span>";
    }
    
    $output .=  "\n          </td>";
    }
    
    $output .=  "\n      </tr>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n    \n    ";
#line 126 "template/en/default/flag/list.html.tmpl"
    if ((! $stash->get(['type', 0, 'flags', 0]) || $stash->get(['type', 0, 'flags', 0, 'size', 0]) eq 0) && $stash->get(['type', 0, 'is_active', 0])) {
    $output .=  "\n";
#line 125 "template/en/default/flag/list.html.tmpl"
    $output .=  $context->process('flag_row', { 'first_cell_empty' => 1, 'addl_text' => '' });
    }
    ;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n\n  ";
#line 138 "template/en/default/flag/list.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('flag_types');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'type'} = $_tt_value;
#line 131 "template/en/default/flag/list.html.tmpl"
    if (!($stash->get(['type', 0, 'flags', 0]) && $stash->get(['type', 0, 'flags', 0, 'size', 0]) > 0 && $stash->get(['type', 0, 'is_multiplicable', 0]) && $stash->get(['type', 0, 'is_active', 0]))) {
    ($_tt_value, $_tt_error) = $_tt_list->get_next();
    next FOR1;
    
    }
    
#line 135 "template/en/default/flag/list.html.tmpl"
    if (! $stash->get('separator_displayed')) {
    $output .=  "\n        <tr><td colspan=\"3\"><hr></td></tr>";
#line 134 "template/en/default/flag/list.html.tmpl"
    $stash->set('separator_displayed', 1);
    }
    
    $output .=  "\n";
#line 137 "template/en/default/flag/list.html.tmpl"
    $output .=  $context->process('flag_row', { 'first_cell_empty' => 0, 'addl_text' => 'addl.' });;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n</table>\n";
    }
    else {
    $output .=  "\n  ";
#line 143 "template/en/default/flag/list.html.tmpl"
    $stash->set('header_displayed', 0);
#line 156 "template/en/default/flag/list.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('flag_types');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR1:   while (! $_tt_error) {
                $stash->{'type'} = $_tt_value;
#line 155 "template/en/default/flag/list.html.tmpl"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['type', 0, 'flags', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    FOR2:   while (! $_tt_error) {
                $stash->{'flag'} = $_tt_value;
#line 149 "template/en/default/flag/list.html.tmpl"
    if (! $stash->get('flag_no_header') && ! $stash->get('header_displayed')) {
    $output .=  "\n        <p><b>Flags:</b></p>";
#line 148 "template/en/default/flag/list.html.tmpl"
    $stash->set('header_displayed', 1);
    }
    
#line 150 "template/en/default/flag/list.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['flag', 0, 'setter', 0, 'nick', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  ":\n      ";
#line 151 "template/en/default/flag/list.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('no_break')
                  || $context->throw($context->error);
    
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['type', 0, 'name', 0]);
        
        &$_tt_filter($output);
    };
    
        
        &$_tt_filter($output);
    };
    
#line 151 "template/en/default/flag/list.html.tmpl"
    $output .=  $stash->get(['flag', 0, 'status', 0]);
#line 154 "template/en/default/flag/list.html.tmpl"
    if ($stash->get(['flag', 0, 'requestee', 0])) {
    $output .=  "\n        (";
#line 153 "template/en/default/flag/list.html.tmpl"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['flag', 0, 'requestee', 0, 'nick', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  ")";
    }
    
    $output .=  "<br>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    ;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    }
    
    $output .=  "\n\n";
    $output .=  "\n";
    
    $output .=  "\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {
        'flag_row' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
        $output .=  "\n  <tr>";
#line 168 "template/en/default/flag/list.html.tmpl"
        if ($stash->get('first_cell_empty')) {
        $output .=  "\n    <td>&nbsp;</td>\n    <td>";
        }
        else {
        $output .=  "\n    <td colspan=\"2\">";
        }
        
        $output .=  "\n";
#line 170 "template/en/default/flag/list.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get('addl_text');
            
            &$_tt_filter($output);
        };
        
        $output .=  "\n      <label title=\"";
#line 171 "template/en/default/flag/list.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['type', 0, 'description', 0]);
            
            &$_tt_filter($output);
        };
        
        $output .=  "\" for=\"flag_type-";
#line 171 "template/en/default/flag/list.html.tmpl"
        $output .=  $stash->get(['type', 0, 'id', 0]);
        $output .=  "\">";
#line 172 "template/en/default/flag/list.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('no_break')
                      || $context->throw($context->error);
        
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['type', 0, 'name', 0]);
            
            &$_tt_filter($output);
        };
        
            
            &$_tt_filter($output);
        };
        
        $output .=  "</label>\n    </td>\n    <td>\n      <select id=\"flag_type-";
#line 175 "template/en/default/flag/list.html.tmpl"
        $output .=  $stash->get(['type', 0, 'id', 0]);
        $output .=  "\" name=\"flag_type-";
#line 175 "template/en/default/flag/list.html.tmpl"
        $output .=  $stash->get(['type', 0, 'id', 0]);
        $output .=  "\"\n              title=\"";
#line 176 "template/en/default/flag/list.html.tmpl"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['type', 0, 'description', 0]);
            
            &$_tt_filter($output);
        };
        
        $output .=  "\"";
#line 177 "template/en/default/flag/list.html.tmpl"
        if (!(($stash->get(['type', 0, 'is_requestable', 0]) && $stash->get(['user', 0, 'can_request_flag', [ $stash->get('type') ]])) || $stash->get(['user', 0, 'can_set_flag', [ $stash->get('type') ]]))) {
        $output .=  ('' . " disabled=\"disabled\"");
        }
        
        $output .=  "\n              onchange=\"toggleRequesteeField(this);\"\n              class=\"flag_select flag_type-";
#line 179 "template/en/default/flag/list.html.tmpl"
        $output .=  $stash->get(['type', 0, 'id', 0]);
        $output .=  "\">\n        <option value=\"X\"></option>";
#line 183 "template/en/default/flag/list.html.tmpl"
        if ($stash->get(['type', 0, 'is_requestable', 0]) && $stash->get(['user', 0, 'can_request_flag', [ $stash->get('type') ]])) {
        $output .=  "\n          <option value=\"?\">?</option>";
        }
        
#line 187 "template/en/default/flag/list.html.tmpl"
        if ($stash->get(['user', 0, 'can_set_flag', [ $stash->get('type') ]])) {
        $output .=  "\n          <option value=\"+\">+</option>\n          <option value=\"-\">-</option>";
        }
        
        $output .=  "\n      </select>\n    </td>";
#line 211 "template/en/default/flag/list.html.tmpl"
        if ($stash->get('any_flags_requesteeble')) {
        $output .=  "\n      <td>";
#line 209 "template/en/default/flag/list.html.tmpl"
        if ($stash->get(['type', 0, 'is_requestable', 0]) && $stash->get(['type', 0, 'is_requesteeble', 0])) {
        $output .=  "\n          <span style=\"white-space: nowrap;\">";
#line 207 "template/en/default/flag/list.html.tmpl"
        if ($stash->get(['Param', [ 'usemenuforusers' ]])) {
#line 1 "template/en/default/flag/list.html.tmpl"
        $output .=  $context->include('global/userselect.html.tmpl', { 'name' => ("requestee_type-" . $stash->get(['type', 0, 'id', 0])), 'id' => ("requestee_type-" . $stash->get(['type', 0, 'id', 0])), 'multiple' => $stash->get(['type', 0, 'is_multiplicable', 0]) * 3, 'emptyok' => ! $stash->get(['type', 0, 'is_multiplicable', 0]), 'value' => '', 'custom_userlist' => $stash->get(['type', 0, 'grant_list', 0]) });
        }
        else {
        $output .=  "\n              (<input type=\"text\" class=\"requestee\" maxlength=\"255\"\n                      id=\"requestee_type-";
#line 205 "template/en/default/flag/list.html.tmpl"
        $output .=  $stash->get(['type', 0, 'id', 0]);
        $output .=  "\"\n                      name=\"requestee_type-";
#line 206 "template/en/default/flag/list.html.tmpl"
        $output .=  $stash->get(['type', 0, 'id', 0]);
        $output .=  "\">)";
        }
        
        $output .=  "\n          </span>";
        }
        
        $output .=  "\n      </td>";
        }
        
        $output .=  "\n  </tr>";
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
    },
});
